{
    "React arrow function": {
		"prefix": "rc",
		"body": [
       "/*",
      " * ${TM_FILENAME_BASE} Component",
      " *",
      " */",
      "",
      "import React from \"react\"",
      "",
      "const ${TM_FILENAME_BASE} = () => {",
      "\t return (",
      "\t\t <>",
      "\t\t\t {/* <p>Hi</p> */}",
      "\t\t </>",
      "\t )",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
		],
		  "description": "React arrow function"
    },
    "React arrow function component with Props": {
		"prefix": "rcp",
		"body": [
      "/*",
      " * ${TM_FILENAME_BASE} Component",
      " *",
      " */",
      "",
      "import React from \"react\"",
      "import PropTypes from \"prop-types\"",
      "",
      "const ${TM_FILENAME_BASE} = props => {",
      "\t return (",
      "\t\t <>",
      "\t\t\t {/* <p>{props.propName}</p> */}",
      "\t\t </>",
      "\t )",
      "}",
      "",
      "${TM_FILENAME_BASE}.defaultProps = {"
      "\t // propName: \"default prop value\"",
      "}",
      "",
      "${TM_FILENAME_BASE}.propTypes = {"
      "\t // propName: PropTypes.string.isRequired,"
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
		],
		  "description": "React arrow function component with Props"
    },
    "Breakpoint": {
		"prefix": "bp",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(?)) {}",
		],
		  "description": "Ally media query"
    },
    "Breakpoint xs": {
		"prefix": "bpxs",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(xs)) {}",
		],
		  "description": "Ally media query xs"
    },
    "Breakpoint s": {
		"prefix": "bps",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(s)) {}",
		],
		  "description": "Ally media query s"
    },
    "Breakpoint m": {
		"prefix": "bpm",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(m)) {}",
		],
		  "description": "Ally media query m"
    },
    "Breakpoint l": {
		"prefix": "bpl",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(l)) {}",
		],
		  "description": "Ally media query l"
    },
    "Breakpoint xl": {
		"prefix": "bpxl",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/Breakpoints/Breakpoints'"
      "@media (min-width: breakpoint(xl)) {}",
		],
		  "description": "Ally media query xl"
    },
    "Z Layer": {
		"prefix": "zl",
		"body": [
      "// Manage in './src/00_design-tokens/001_layout/ZLayers/ZLayers'"
      "z-index: zlayer(${TM_FILENAME_BASE});",
		],
		  "description": "zlayer() snippet"
    },
    "Spacing xxxxs": {
		"prefix": "sxxxxs",
		"body": [
      "spacing(xxxxs)",
		],
		  "description": "Spacing xxxxs snippet"
    },
    "Spacing xxxs": {
		"prefix": "sxxxs",
		"body": [
      "spacing(xxxs)",
		],
		  "description": "Spacing xxxs snippet"
    },
    "Spacing xxs": {
		"prefix": "sxxs",
		"body": [
      "spacing(xxs)",
		],
		  "description": "Spacing xxs snippet"
    },
    "Spacing xs": {
		"prefix": "sxs",
		"body": [
      "spacing(xs)",
		],
		  "description": "Spacing xs snippet"
    },
    "Spacing s": {
		"prefix": "ss",
		"body": [
      "spacing(s)",
		],
		  "description": "Spacing s snippet"
    },
    "Spacing m": {
		"prefix": "sm",
		"body": [
      "spacing(m)",
		],
		  "description": "Spacing m snippet"
    },
    "Spacing l": {
		"prefix": "sl",
		"body": [
      "spacing(l)",
		],
		  "description": "Spacing l snippet"
    },
    "Spacing xl": {
		"prefix": "sxl",
		"body": [
      "spacing(xl)",
		],
		  "description": "Spacing xl snippet"
    },
    "Spacing xxl": {
		"prefix": "sxxl",
		"body": [
      "spacing(xxl)",
		],
		  "description": "Spacing xxl snippet"
    },
    "Spacing xxxl": {
		"prefix": "sxxxl",
		"body": [
      "spacing(xxxl)",
		],
		  "description": "Spacing xxxl snippet"
    },
    "Spacing xxxxl": {
		"prefix": "sxxxxl",
		"body": [
      "spacing(xxxxl)",
		],
		  "description": "Spacing xxxxl snippet"
    },
    "Wrapper SiteMaxWidth": {
		"prefix": "wsite",
		"body": [
      "width: wrapper(SiteMaxWidth);",
		],
		  "description": "Wrapper SiteMaxWidth snippet"
    },
    "Brand color snow": {
		"prefix": "cs",
		"body": [
      "color(snow)",
		],
		  "description": "Brand color snow snippet"
    },
    "Brand color midnight": {
		"prefix": "cm",
		"body": [
      "color(midnight)",
		],
		  "description": "Brand color midnight snippet"
    },
    "Brand color gold": {
		"prefix": "cg",
		"body": [
      "color(gold)",
		],
		  "description": "Brand color gold snippet"
    },
    "Brand color tangerine": {
		"prefix": "ct",
		"body": [
      "color(tangerine)",
		],
		  "description": "Brand color tangerine snippet"
    }
}
